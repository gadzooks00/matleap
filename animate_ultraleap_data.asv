function animate_ultraleap_data(file_path)
    % Visualizes recorded Ultraleap hand tracking data in 3D, frame by frame.
    % INPUT: file_path - Path to the HDF5 file.
    fprintf('[INFO] Loading data from: %s\n', file_path);

    % Load timestamps
    timestamps = h5read(file_path, '/timestamps');
    frame_ids = timestamps(:,1); % Extract frame IDs
    time_vals = timestamps(:,3); % Extract timestamps
    num_frames = length(frame_ids);

    % Load camera images if available
    try
        camera_images = h5read(file_path, '/camera_images');
        has_camera_data = true;
    catch
        warning('[WARN] No camera images found in dataset.');
        has_camera_data = false;
    end

    % Normalize time to start at 0 seconds
    time_vals = time_vals - time_vals(1);
    total_time = time_vals(end); % Duration of original recording

    % Compute frame intervals for accurate playback speed
    frame_intervals = diff(time_vals);
    frame_intervals = [frame_intervals; mean(frame_intervals)]; % Approximate last frame interval

    % Determine the number of hands in the dataset
    num_hands = max(timestamps(:,4));
    fprintf('[INFO] Total Frames: %d | Max Hands: %d | Recording Duration: %.2f seconds\n', ...
        num_frames, num_hands, total_time);

    % Set up the figure
    figure;
    subplot(5,1,1:4); % 3D plot for hands
    hold on;
    grid on;
    axis equal;
    xlabel('X Position (mm)');
    ylabel('Y Position (mm)');
    zlabel('Z Position (mm)');
    title('Ultraleap Hand Motion');

    subplot(5,1,5); % Camera Image Display
    camera_display = imshow(zeros(240, 320, 'uint8'));
    title('Captured Camera Image');

    % Define colors for each hand
    colors = lines(num_hands);

    % Initialize plots for each hand
    hand_plots = gobjects(num_hands, 1);
    finger_plots = gobjects(num_hands, 5, 4); % 5 fingers, 4 bones each

    for h = 1:num_hands
        hand_plots(h) = scatter3(nan, nan, nan, 100, colors(h, :), 'filled', 'square');
        for f = 1:5
            for b = 1:4
                finger_plots(h, f, b) = plot3(nan, nan, nan, 'o-', 'Color', colors(h, :), 'LineWidth', 2);
            end
        end
    end

    % Add an interactive timeline
    subplot(5,1,5); % Timeline subplot
    timeline = plot([0, total_time], [0, 0], 'k-', 'LineWidth', 2); % Full timeline
    progress_marker = plot(0, 0, 'ro', 'MarkerSize', 8, 'MarkerFaceColor', 'r'); % Moving dot
    xlim([0 total_time]);
    ylim([-1 1]);
    xlabel('Time (seconds)');
    title('Playback Progress');

    % Animation Loop
    start_time = tic; % Start recording the real-time elapsed duration

    for i = 1:num_frames
        elapsed_time = toc(start_time); % Get elapsed time in real playback
        target_time = time_vals(i); % Target timestamp for the current frame

        % Adjust playback speed
        while elapsed_time < target_time
            pause(0.01); % Small delay until it's time to render the next frame
            elapsed_time = toc(start_time);
        end

        % Update each detected hand
        for h = 1:num_hands
            hand_group = sprintf('/hand_%d/palm', h);
            try
                palm_pos = h5read(file_path, hand_group, [i, 1], [1, 3]); % Read X, Y, Z position
                set(hand_plots(h), 'XData', palm_pos(1), 'YData', palm_pos(2), 'ZData', palm_pos(3));
            catch
                set(hand_plots(h), 'XData', nan, 'YData', nan, 'ZData', nan); % Hide missing hand
            end

            % Update fingers & bones
            for f = 1:5
                for b = 1:4
                    bone_group = sprintf('/hand_%d/finger_%d/bone_%d', h, f, b);
                    try
                        bone_data = h5read(file_path, bone_group, [i, 1], [1, 6]); % Read prev_joint & next_joint
                        prev_joint = bone_data(1:3);
                        next_joint = bone_data(4:6);
                        set(finger_plots(h, f, b), 'XData', [prev_joint(1), next_joint(1)], ...
                            'YData', [prev_joint(2), next_joint(2)], ...
                            'ZData', [prev_joint(3), next_joint(3)]);
                    catch
                        set(finger_plots(h, f, b), 'XData', nan, 'YData', nan, 'ZData', nan); % Hide missing bones
                    end
                end
            end
        end
        
        % Display Camera Image
    if has_camera_data
        set(camera_display, 'CData', camera_images(:,:,i));
    end

        % Update the timeline progress
        set(progress_marker, 'XData', target_time, 'YData', 0);

        % Draw updates
        drawnow;
    end

    fprintf('[INFO] Playback finished.\n');
end
